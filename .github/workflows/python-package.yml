# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: ["3.10", "3.11", "3.12"]
        psycopg-version: ["3.1", "3.2"]
        pyarrow-version: ["16", "17"]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        
        python -c '
        import re, sys
        pattern = re.compile(r"^(duckdb|psycopg|pyarrow)[=<>!~]")
        [print(line, end="") for line in open(sys.argv[1], "r") if not pattern.match(line)]
        ' requirements.txt > temp_requirements.txt

        echo "psycopg==${{ matrix.psycopg-version }}" >> temp_requirements.txt
        echo "pyarrow==${{ matrix.pyarrow-version }}" >> temp_requirements.txt

        rm requirements.txt && mv temp_requirements.txt requirements.txt

        pip install -e .[test]
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
